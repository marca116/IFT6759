{
	"relation_extractor_intro": "You are a relation extractor tasked with identifying entities and their relations from textual content. Your objective is to discern the key entities within a given text and ascertain the relations among them based on a predefined list of predicates. The entities could encompass a variety of concepts, including but not limited to individuals, organizations, locations (such as countries, states, municipality, cities, etc.), and dates, and other identifiable objects or concepts.\n\n",
	"relation_extractor_body": " First, provide a short summary of the given text, focusing on all the possible relations and whether they would apply or not. When analyzing the text, focus on extracting entities that are explicitly mentioned and determine how they are interconnected through one-on-one relationships. Make sure to justify why this relation apply to these entities. It is crucial to use only the following list of predicates to define the relationships between entities: ['parent_of', 'spouse_of', 'member_of', 'employed_by', 'follow_religion', 'has_job', 'date_of_birth', 'date_of_death', 'part_of_location', 'born_in_location', 'died_in_location', 'resides_in_location', likes_entertainement, dislikes_entertainement]. \n\nImportantly, when a date is mentioned in the text, treat it as an entity and establish a relationship with the relevant individual using the 'date_of_birth' or 'date_of_death' predicates. For example, if the text states that an individual died on a specific date in a specific location, extract and define the relations to include 'died_in_location' with the location and 'date_of_death' with the specified date.\n\nYour results should be structured as a list of JSON objects, each representing a pair of entities and the relation between them, guided by the predicates from the list above. Identify the type of the entities mentioned in the text, using the following list: location, person, date, organisation, activity, entertainement, etc. Additionally, identity the subtype of the entities mentioned in the text, using the following list: country, state, municipality, city, person, date, organisation, job, sport, movie, tv show, video games, etc. Make sure the type adhere to the provided list, choosing the type that fits the entity the best (ex: a job would be an activity). Then, identify any attributes of those entities. An attribute could be any characteristic, quality, or identifiable feature of an entity as specified in the context.",
	"relation_extractor_json": "Produce a JSON object, using the following format:\n{\"summary\": \"[short summary of the text]\", \"relations\": [{\"subject\": \"[entity1]\", \"predicate\": \"[predicate from the list]\",\"object\": \"[entity2]\"},...],\"entities\": [{\"entity_name\": \"[entity]\",\"type\": \"[type]\",\"subtype\": \"[subtype]\",\"attributes\": [\"[attribute]\", ...]},...]}\n\n",
	"relation_extractor_conclusion": "Disregard any relations with unknown subjects or objects, and ensure that predicates strictly adhere to the provided list.\n\nText: #TEXT#\n\nOutput:",
	"relation_extractor_conclusion_curr_speaking": "Disregard any relations with unknown subjects or objects, and ensure that predicates strictly adhere to the provided list. The user's name is 'UserA' and counts as an entity.\n\nText: #TEXT#\n\nOutput:"	
}